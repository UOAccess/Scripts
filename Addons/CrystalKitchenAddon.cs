/////////////////////////////////////////////////
//
// Automatically generated by the
// AddonGenerator script by Arya
//
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class CrystalKitchenAddon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new CrystalKitchenAddonDeed();
			}
		}

		[ Constructable ]
		public CrystalKitchenAddon()
		{
			AddonComponent ac;
			ac = new AddonComponent( 1872 );
			ac.Hue = 2544;
			AddComponent( ac, -2, 1, 13 );
			ac = new AddonComponent( 4100 );
			AddComponent( ac, -2, 0, 18 );
			ac = new AddonComponent( 4100 );
			AddComponent( ac, -2, -1, 18 );
			ac = new AddonComponent( 4104 );
			AddComponent( ac, -2, -1, 14 );
			ac = new AddonComponent( 1872 );
			ac.Hue = 2544;
			AddComponent( ac, 0, -2, 7 );
			ac = new AddonComponent( 1872 );
			ac.Hue = 2544;
			AddComponent( ac, -1, -2, 6 );
			ac = new AddonComponent( 1872 );
			ac.Hue = 2544;
			AddComponent( ac, 1, -2, 8 );
			ac = new AddonComponent( 6571 );
			ac.Light = LightType.Circle225;
			AddComponent( ac, 1, -2, 15 );
			ac = new AddonComponent( 1872 );
			ac.Hue = 2544;
			AddComponent( ac, -2, -1, 7 );
			ac = new AddonComponent( 4104 );
			AddComponent( ac, -2, 0, 14 );
			ac = new AddonComponent( 3135 );
			AddComponent( ac, -2, 0, 14 );
			ac = new AddonComponent( 4012 );
			ac.Light = LightType.Circle225;
			AddComponent( ac, 1, -2, 13 );
			ac = new AddonComponent( 4160 );
			AddComponent( ac, 0, 0, 13 );
			ac = new AddonComponent( 2416 );
			AddComponent( ac, 1, -2, 21 );
			ac = new AddonComponent( 4102 );
			ac.Hue = 2419;
			AddComponent( ac, 2, -2, 13 );
			ac = new AddonComponent( 3133 );
			AddComponent( ac, -2, 0, 14 );
			ac = new AddonComponent( 9035 );
			AddComponent( ac, -2, -2, 21 );
			ac = new AddonComponent( 1 );
			AddComponent( ac, -2, -2, 14 );
			ac = new AddonComponent( 2886 );
			ac.Hue = 2931;
			AddComponent( ac, -2, -2, 14 );
			ac = new AddonComponent( 7616 );
			ac.Hue = 1373;
			AddComponent( ac, -1, -2, 7 );
			ac = new AddonComponent( 7613 );
			ac.Hue = 1373;
			AddComponent( ac, -2, -1, 8 );
			ac = new AddonComponent( 7616 );
			ac.Hue = 1373;
			AddComponent( ac, 2, -2, 8 );
			ac = new AddonComponent( 13814 );
			AddComponent( ac, 3, -2, 8 );
			ac = new AddonComponent( 13814 );
			AddComponent( ac, -2, 2, 8 );
			ac = new AddonComponent( 7613 );
			ac.Hue = 1373;
			AddComponent( ac, -2, -2, 8 );
			ac = new AddonComponent( 7613 );
			ac.Hue = 1373;
			AddComponent( ac, -2, 0, 8 );
			ac = new AddonComponent( 1872 );
			ac.Hue = 2544;
			AddComponent( ac, -2, -2, 7 );
			ac = new AddonComponent( 1872 );
			ac.Hue = 2544;
			AddComponent( ac, -2, 1, 8 );
			ac = new AddonComponent( 1872 );
			ac.Hue = 2544;
			AddComponent( ac, -2, 0, 7 );
			ac = new AddonComponent( 7894 );
			ac.Hue = 2544;
			AddComponent( ac, -1, 1, 2 );
			ac = new AddonComponent( 4102 );
			AddComponent( ac, 2, -2, 18 );
			ac = new AddonComponent( 7894 );
			ac.Hue = 2544;
			AddComponent( ac, -1, 1, 0 );
			ac = new AddonComponent( 4012 );
			ac.Light = LightType.Circle225;
			AddComponent( ac, 0, -2, 13 );
			ac = new AddonComponent( 1872 );
			ac.Hue = 2544;
			AddComponent( ac, 2, -2, 6 );
			ac = new AddonComponent( 2541 );
			AddComponent( ac, 1, -2, 15 );
			ac = new AddonComponent( 4227 );
			AddComponent( ac, -1, -2, 13 );
			ac = new AddonComponent( 2431 );
			AddComponent( ac, -2, 1, 18 );
			ac = new AddonComponent( 1872 );
			ac.Hue = 2544;
			AddComponent( ac, 0, 0, 8 );
			ac = new AddonComponent( 1872 );
			ac.Hue = 2544;
			AddComponent( ac, 1, 0, 8 );
			ac = new AddonComponent( 2519 );
			AddComponent( ac, 1, 0, 13 );
			ac = new AddonComponent( 2519 );
			AddComponent( ac, 1, 0, 14 );
			ac = new AddonComponent( 2519 );
			AddComponent( ac, 1, 0, 15 );
			ac = new AddonComponent( 2519 );
			AddComponent( ac, 1, 0, 16 );
			ac = new AddonComponent( 2519 );
			AddComponent( ac, 1, 0, 17 );
			ac = new AddonComponent( 2519 );
			AddComponent( ac, 1, 0, 18 );

		}

		public CrystalKitchenAddon( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class CrystalKitchenAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new CrystalKitchenAddon();
			}
		}

		[Constructable]
		public CrystalKitchenAddonDeed()
		{
			Name = "CrystalKitchen";
		}

		public CrystalKitchenAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}