
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class BloodyRackAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {4686, 2, -1, 0}, {4687, 2, -2, 0}, {4688, 1, -2, 0}// 1	2	3	
			, {4689, 1, -1, 0}, {4690, 0, -1, 0}, {4691, 0, -2, 0}// 4	5	6	
			, {4692, -1, -2, 0}, {4693, -1, -1, 0}, {7568, 2, -1, 7}// 7	8	9	
			, {7569, 1, -1, 7}, {4655, 1, 0, 0}, {4017, 0, 2, 0}// 10	11	12	
			, {2879, 0, 1, 0}, {5111, 0, 1, 12}, {4650, 0, 1, 7}// 14	16	17	
			, {7573, 2, -2, 0}// 18	
		};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new BloodyRackAddonDeed();
			}
		}

		[ Constructable ]
		public BloodyRackAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 9579, 0, 2, 5, 0, -1, "Branding Iron", 1);// 13
			AddComplexComponent( (BaseAddon) this, 5743, 0, 1, 7, 2785, -1, "", 1);// 15

		}

		public BloodyRackAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class BloodyRackAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new BloodyRackAddon();
			}
		}

		[Constructable]
		public BloodyRackAddonDeed()
		{
			Name = "BloodyRack";
		}

		public BloodyRackAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}