/////////////////////////////////////////////////
//
// Automatically generated by the
// AddonGenerator script by Arya
//
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class MazeHouseWallWEAddon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new MazeHouseWallWEAddonDeed();
			}
		}

		[ Constructable ]
		public MazeHouseWallWEAddon()
		{
			AddonComponent ac;
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, -16, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, -15, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, -14, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, -13, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, -12, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, -11, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, -10, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, -9, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, -8, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, -7, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, -6, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, -5, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, -4, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, -3, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, -2, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, -1, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, 0, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, 1, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, 2, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, 3, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, 4, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, 5, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, 6, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, 7, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, 8, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, 9, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, 10, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, 11, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, 12, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, 13, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, 14, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, 15, 0, 0 );
			ac = new AddonComponent( 12299 );
			ac.Hue = 1153;
			AddComponent( ac, 16, 0, 0 );

		}

		public MazeHouseWallWEAddon( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class MazeHouseWallWEAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new MazeHouseWallWEAddon();
			}
		}

		[Constructable]
		public MazeHouseWallWEAddonDeed()
		{
			Name = "MazeHouseWallWE";
		}

		public MazeHouseWallWEAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}