
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class FallcolorsEastAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {2820, 0, 0, 0}, {2821, 0, -1, 0}, {2819, 0, 1, 0}// 1	2	3	
			, {2829, 0, 2, 0}, {2829, 0, -2, 0}, {2822, -1, 1, 0}// 4	5	6	
			, {2822, 1, 1, 0}, {2823, -1, 0, 0}, {2823, 1, 0, 0}// 7	8	9	
			, {2824, -1, -1, 0}, {2824, 1, -1, 0}, {13001, 0, -1, 0}// 10	11	12	
			, {13001, 0, 0, 0}, {13001, 0, 1, 0}, {13001, 0, -2, 0}// 13	14	15	
			, {3220, -1, 0, 2}, {3220, 1, 0, 2}, {3223, 0, 1, 3}// 17	20	24	
			, {3204, 0, -1, 0}, {3377, 0, 0, 8}, {3204, 0, 2, 3}// 25	26	29	
			, {3204, 0, -2, 3}// 30	
		};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new FallcolorsEastAddonDeed();
			}
		}

		[ Constructable ]
		public FallcolorsEastAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 3220, -1, -1, 2, 2118, -1, "", 1);// 16
			AddComplexComponent( (BaseAddon) this, 3220, -1, 1, 2, 2118, -1, "", 1);// 18
			AddComplexComponent( (BaseAddon) this, 3220, 1, -1, 2, 2118, -1, "", 1);// 19
			AddComplexComponent( (BaseAddon) this, 3220, 1, 1, 2, 2118, -1, "", 1);// 21
			AddComplexComponent( (BaseAddon) this, 3223, 0, -1, 3, 2118, -1, "", 1);// 22
			AddComplexComponent( (BaseAddon) this, 3223, 0, 0, 3, 2118, -1, "", 1);// 23
			AddComplexComponent( (BaseAddon) this, 3377, 0, 1, 8, 2118, -1, "", 1);// 27
			AddComplexComponent( (BaseAddon) this, 3377, 0, -1, 8, 2116, -1, "", 1);// 28

		}

		public FallcolorsEastAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class FallcolorsEastAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new FallcolorsEastAddon();
			}
		}

		[Constructable]
		public FallcolorsEastAddonDeed()
		{
			Name = "Fallcolors East";
		}

		public FallcolorsEastAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}