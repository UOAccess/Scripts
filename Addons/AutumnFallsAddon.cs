/////////////////////////////////////////////////
//
// Automatically generated by the
// AddonGenerator script by Arya
//
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class AutumnFallsAddon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new AutumnFallsAddonDeed();
			}
		}

		[ Constructable ]
		public AutumnFallsAddon()
		{
			AddonComponent ac;
			ac = new AddonComponent( 13555 );
			AddComponent( ac, 0, 0, 2 );
			ac = new AddonComponent( 13555 );
			AddComponent( ac, -1, -1, 2 );
			ac = new AddonComponent( 13567 );
			AddComponent( ac, 1, 0, 2 );
			ac = new AddonComponent( 13567 );
			AddComponent( ac, 0, -1, 2 );
			ac = new AddonComponent( 13573 );
			AddComponent( ac, 2, 0, 2 );
			ac = new AddonComponent( 13574 );
			AddComponent( ac, 1, -1, 2 );
			ac = new AddonComponent( 13597 );
			AddComponent( ac, -1, 2, 2 );
			ac = new AddonComponent( 13579 );
			AddComponent( ac, -2, 0, 2 );
			ac = new AddonComponent( 13591 );
			AddComponent( ac, -1, 1, 2 );
			ac = new AddonComponent( 13603 );
			AddComponent( ac, -1, 3, 2 );
			ac = new AddonComponent( 4961 );
			AddComponent( ac, -2, 0, 15 );
			ac = new AddonComponent( 4962 );
			AddComponent( ac, -1, 0, 15 );
			ac = new AddonComponent( 4949 );
			AddComponent( ac, -1, 0, 18 );
			ac = new AddonComponent( 4950 );
			AddComponent( ac, -1, -1, 18 );
			ac = new AddonComponent( 6006 );
			AddComponent( ac, -1, -2, 2 );
			ac = new AddonComponent( 6010 );
			AddComponent( ac, -2, 2, 2 );
			ac = new AddonComponent( 6001 );
			AddComponent( ac, -2, 1, 1 );
			ac = new AddonComponent( 4963 );
			AddComponent( ac, 0, 1, 19 );
			ac = new AddonComponent( 4968 );
			AddComponent( ac, 1, 1, 27 );
			ac = new AddonComponent( 6045 );
			AddComponent( ac, 3, 0, 2 );
			ac = new AddonComponent( 6046 );
			AddComponent( ac, 3, 1, 2 );
			ac = new AddonComponent( 6049 );
			AddComponent( ac, -1, 4, 2 );
			ac = new AddonComponent( 6050 );
			AddComponent( ac, 0, 4, 2 );
			ac = new AddonComponent( 6055 );
			AddComponent( ac, 1, 4, 2 );
			ac = new AddonComponent( 6057 );
			AddComponent( ac, 2, -1, 2 );
			ac = new AddonComponent( 6053 );
			AddComponent( ac, 3, -1, 2 );
			ac = new AddonComponent( 6045 );
			AddComponent( ac, 3, 2, 2 );
			ac = new AddonComponent( 6055 );
			AddComponent( ac, 3, 3, 2 );
			ac = new AddonComponent( 6050 );
			AddComponent( ac, 2, 3, 2 );
			ac = new AddonComponent( 6058 );
			AddComponent( ac, 1, 3, 2 );
			ac = new AddonComponent( 6056 );
			AddComponent( ac, -2, 4, 2 );
			ac = new AddonComponent( 6052 );
			AddComponent( ac, -2, 3, 2 );
			ac = new AddonComponent( 6051 );
			AddComponent( ac, -2, 2, 2 );
			ac = new AddonComponent( 6053 );
			AddComponent( ac, 2, -2, 2 );
			ac = new AddonComponent( 6047 );
			AddComponent( ac, 1, -2, 2 );
			ac = new AddonComponent( 6048 );
			AddComponent( ac, 0, -2, 2 );
			ac = new AddonComponent( 6047 );
			AddComponent( ac, -1, -2, 2 );
			ac = new AddonComponent( 6040 );
			AddComponent( ac, -1, 0, 2 );
			ac = new AddonComponent( 6041 );
			AddComponent( ac, -2, 0, 2 );
			ac = new AddonComponent( 6042 );
			AddComponent( ac, -1, 1, 2 );
			ac = new AddonComponent( 6043 );
			AddComponent( ac, 0, 0, 2 );
			ac = new AddonComponent( 6044 );
			AddComponent( ac, 0, 3, 2 );
			ac = new AddonComponent( 6039 );
			AddComponent( ac, 0, 2, 2 );
			ac = new AddonComponent( 6040 );
			AddComponent( ac, 1, 1, 2 );
			ac = new AddonComponent( 6041 );
			AddComponent( ac, 2, 2, 2 );
			ac = new AddonComponent( 13456 );
			AddComponent( ac, 0, 1, 2 );
			ac = new AddonComponent( 13521 );
			AddComponent( ac, 1, 2, 2 );
			ac = new AddonComponent( 13504 );
			AddComponent( ac, -1, 2, 2 );
			ac = new AddonComponent( 13506 );
			AddComponent( ac, 2, 1, 2 );
			ac = new AddonComponent( 6039 );
			AddComponent( ac, 1, 0, 2 );
			ac = new AddonComponent( 13451 );
			AddComponent( ac, 0, 0, 12 );
			ac = new AddonComponent( 6002 );
			AddComponent( ac, -3, 0, 2 );
			ac = new AddonComponent( 4967 );
			AddComponent( ac, -2, 2, 13 );
			ac = new AddonComponent( 4970 );
			AddComponent( ac, -3, 0, 0 );
			ac = new AddonComponent( 3299 );
			AddComponent( ac, -3, 2, 2 );
			ac = new AddonComponent( 3301 );
			AddComponent( ac, -3, 2, 2 );
			ac = new AddonComponent( 3302 );
			AddComponent( ac, 1, -3, 2 );
			ac = new AddonComponent( 3304 );
			AddComponent( ac, 1, -3, 2 );
			ac = new AddonComponent( 3286 );
			AddComponent( ac, -3, -2, 2 );
			ac = new AddonComponent( 3287 );
			AddComponent( ac, -3, -2, 2 );
			ac = new AddonComponent( 3288 );
			AddComponent( ac, 3, -1, 4 );
			ac = new AddonComponent( 3289 );
			AddComponent( ac, 3, -1, 4 );
			ac = new AddonComponent( 3157 );
			AddComponent( ac, 0, 4, 3 );
			ac = new AddonComponent( 3158 );
			AddComponent( ac, -1, 4, 3 );
			ac = new AddonComponent( 3159 );
			AddComponent( ac, 3, 1, 3 );
			ac = new AddonComponent( 3162 );
			AddComponent( ac, 2, -3, 3 );
			ac = new AddonComponent( 4965 );
			AddComponent( ac, 2, 3, 3 );
			ac = new AddonComponent( 4966 );
			AddComponent( ac, 3, 0, 3 );
			ac = new AddonComponent( 4971 );
			AddComponent( ac, -2, 3, 3 );
			ac = new AddonComponent( 4951 );
			AddComponent( ac, -1, 1, 6 );
			ac = new AddonComponent( 4952 );
			AddComponent( ac, 0, 1, 6 );
			ac = new AddonComponent( 6943 );
			ac.Hue = 2724;
			AddComponent( ac, 1, 4, 4 );
			ac = new AddonComponent( 6946 );
			ac.Hue = 2724;
			AddComponent( ac, -3, 3, 2 );
			ac = new AddonComponent( 6944 );
			ac.Hue = 2724;
			AddComponent( ac, 4, -1, 2 );
			ac = new AddonComponent( 6947 );
			ac.Hue = 2434;
			AddComponent( ac, -2, 4, 2 );
			ac = new AddonComponent( 6950 );
			ac.Hue = 51;
			AddComponent( ac, 3, 2, 3 );
			ac = new AddonComponent( 3317 );
			AddComponent( ac, 1, 4, 2 );
			ac = new AddonComponent( 3318 );
			AddComponent( ac, 2, 4, 2 );
			ac = new AddonComponent( 3319 );
			AddComponent( ac, 3, 4, 2 );

		}

		public AutumnFallsAddon( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class AutumnFallsAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new AutumnFallsAddon();
			}
		}

		[Constructable]
		public AutumnFallsAddonDeed()
		{
			Name = "AutumnFalls";
		}

		public AutumnFallsAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}