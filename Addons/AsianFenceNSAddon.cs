/////////////////////////////////////////////////
//
// Automatically generated by the
// AddonGenerator script by Arya
//
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class AsianFenceNSAddon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new AsianFenceNSAddonDeed();
			}
		}

		[ Constructable ]
		public AsianFenceNSAddon()
		{
			AddonComponent ac;
			ac = new AddonComponent( 10389 );
			AddComponent( ac, -1, -5, 0 );
			ac = new AddonComponent( 10389 );
			AddComponent( ac, -1, -4, 0 );
			ac = new AddonComponent( 10389 );
			AddComponent( ac, -1, -3, 0 );
			ac = new AddonComponent( 10389 );
			AddComponent( ac, -1, -2, 0 );
			ac = new AddonComponent( 10389 );
			AddComponent( ac, -1, -1, 0 );
			ac = new AddonComponent( 10389 );
			AddComponent( ac, -1, 0, 0 );
			ac = new AddonComponent( 10389 );
			AddComponent( ac, -1, 1, 0 );
			ac = new AddonComponent( 10389 );
			AddComponent( ac, -1, 2, 0 );
			ac = new AddonComponent( 10389 );
			AddComponent( ac, -1, 3, 0 );
			ac = new AddonComponent( 10389 );
			AddComponent( ac, -1, 4, 0 );
			ac = new AddonComponent( 10389 );
			ac.Hue = 1505;
			AddComponent( ac, 0, -5, 0 );
			ac = new AddonComponent( 10389 );
			ac.Hue = 1505;
			AddComponent( ac, 0, -4, 0 );
			ac = new AddonComponent( 10389 );
			ac.Hue = 1505;
			AddComponent( ac, 0, -3, 0 );
			ac = new AddonComponent( 10389 );
			ac.Hue = 1505;
			AddComponent( ac, 0, -2, 0 );
			ac = new AddonComponent( 10389 );
			ac.Hue = 1505;
			AddComponent( ac, 0, -1, 0 );
			ac = new AddonComponent( 10389 );
			ac.Hue = 1505;
			AddComponent( ac, 0, 0, 0 );
			ac = new AddonComponent( 10389 );
			ac.Hue = 1505;
			AddComponent( ac, 0, 1, 0 );
			ac = new AddonComponent( 10389 );
			ac.Hue = 1505;
			AddComponent( ac, 0, 2, 0 );
			ac = new AddonComponent( 10389 );
			ac.Hue = 1505;
			AddComponent( ac, 0, 3, 0 );
			ac = new AddonComponent( 10389 );
			ac.Hue = 1505;
			AddComponent( ac, 0, 4, 0 );
			ac = new AddonComponent( 10388 );
			AddComponent( ac, 0, -6, 0 );
			ac = new AddonComponent( 9156 );
			AddComponent( ac, 1, -5, 16 );
			ac = new AddonComponent( 9156 );
			AddComponent( ac, 1, -4, 16 );
			ac = new AddonComponent( 9156 );
			AddComponent( ac, 1, -3, 16 );
			ac = new AddonComponent( 9156 );
			AddComponent( ac, 1, -2, 16 );
			ac = new AddonComponent( 9156 );
			AddComponent( ac, 1, -1, 16 );
			ac = new AddonComponent( 9156 );
			AddComponent( ac, 1, 0, 16 );
			ac = new AddonComponent( 9156 );
			AddComponent( ac, 1, 1, 16 );
			ac = new AddonComponent( 9156 );
			AddComponent( ac, 1, 2, 16 );
			ac = new AddonComponent( 9156 );
			AddComponent( ac, 1, 3, 16 );
			ac = new AddonComponent( 9156 );
			AddComponent( ac, 1, 4, 16 );
			ac = new AddonComponent( 9158 );
			AddComponent( ac, -1, -5, 14 );
			ac = new AddonComponent( 9158 );
			AddComponent( ac, -1, -4, 14 );
			ac = new AddonComponent( 9158 );
			AddComponent( ac, -1, -3, 14 );
			ac = new AddonComponent( 9158 );
			AddComponent( ac, -1, -2, 14 );
			ac = new AddonComponent( 9158 );
			AddComponent( ac, -1, -1, 14 );
			ac = new AddonComponent( 9158 );
			AddComponent( ac, -1, 0, 14 );
			ac = new AddonComponent( 9158 );
			AddComponent( ac, -1, 1, 14 );
			ac = new AddonComponent( 9158 );
			AddComponent( ac, -1, 2, 14 );
			ac = new AddonComponent( 9158 );
			AddComponent( ac, -1, 3, 14 );
			ac = new AddonComponent( 9158 );
			AddComponent( ac, -1, 4, 14 );
			ac = new AddonComponent( 9150 );
			AddComponent( ac, 0, -5, 19 );
			ac = new AddonComponent( 9150 );
			AddComponent( ac, 0, -4, 19 );
			ac = new AddonComponent( 9150 );
			AddComponent( ac, 0, -3, 19 );
			ac = new AddonComponent( 9150 );
			AddComponent( ac, 0, -2, 19 );
			ac = new AddonComponent( 9150 );
			AddComponent( ac, 0, -1, 19 );
			ac = new AddonComponent( 9150 );
			AddComponent( ac, 0, 0, 19 );
			ac = new AddonComponent( 9150 );
			AddComponent( ac, 0, 1, 19 );
			ac = new AddonComponent( 9150 );
			AddComponent( ac, 0, 2, 19 );
			ac = new AddonComponent( 9150 );
			AddComponent( ac, 0, 3, 19 );
			ac = new AddonComponent( 9150 );
			AddComponent( ac, 0, 4, 19 );
			ac = new AddonComponent( 10389 );
			AddComponent( ac, -1, 5, 0 );
			ac = new AddonComponent( 10389 );
			AddComponent( ac, -1, 6, 0 );
			ac = new AddonComponent( 10389 );
			ac.Hue = 1505;
			AddComponent( ac, 0, 5, 0 );
			ac = new AddonComponent( 10389 );
			ac.Hue = 1505;
			AddComponent( ac, 0, 6, 0 );
			ac = new AddonComponent( 10388 );
			ac.Hue = 1505;
			AddComponent( ac, 0, 6, 0 );
			ac = new AddonComponent( 9156 );
			AddComponent( ac, 1, 5, 16 );
			ac = new AddonComponent( 9156 );
			AddComponent( ac, 1, 6, 16 );
			ac = new AddonComponent( 9158 );
			AddComponent( ac, -1, 5, 14 );
			ac = new AddonComponent( 9158 );
			AddComponent( ac, -1, 6, 14 );
			ac = new AddonComponent( 9150 );
			AddComponent( ac, 0, 5, 19 );
			ac = new AddonComponent( 9150 );
			AddComponent( ac, 0, 6, 19 );
			ac = new AddonComponent( 9158 );
			AddComponent( ac, -1, 7, 14 );
			ac = new AddonComponent( 9150 );
			AddComponent( ac, 0, 7, 19 );
			ac = new AddonComponent( 9156 );
			AddComponent( ac, 1, 7, 17 );

		}

		public AsianFenceNSAddon( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class AsianFenceNSAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new AsianFenceNSAddon();
			}
		}

		[Constructable]
		public AsianFenceNSAddonDeed()
		{
			Name = "AsianFenceNS";
		}

		public AsianFenceNSAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}