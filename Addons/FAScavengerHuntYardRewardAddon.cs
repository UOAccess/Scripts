
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class FAScavengerHuntYardRewardAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {6051, -2, 0, 0}, {6052, -2, 1, 0}, {6054, -2, -1, 0}// 1	2	3	
			, {6056, -2, 2, 0}, {3377, -2, -1, 3}, {3225, -2, -1, 0}// 4	5	6	
			, {3226, -2, 0, 0}, {3227, -2, 1, 0}, {3228, -2, 0, 0}// 7	8	9	
			, {3231, -2, 2, 0}, {3225, -2, 1, 0}, {3205, -2, 2, 4}// 10	11	12	
			, {6039, -1, 0, 0}, {6039, -1, 1, 0}, {6039, 0, 0, 0}// 13	14	15	
			, {6039, 0, 1, 0}, {6045, 1, 1, 0}, {6046, 1, 0, 0}// 16	17	18	
			, {6047, 0, -1, 0}, {6048, -1, -1, 0}, {6049, -1, 2, 0}// 19	20	21	
			, {6050, 0, 2, 0}, {6053, 1, -1, 0}, {6055, 1, 2, 0}// 22	23	24	
			, {3229, -1, -1, 0}, {3231, 1, -1, 0}, {3225, 0, -1, 0}// 28	29	30	
			, {3226, 0, -1, 0}, {3227, -1, -1, 0}, {2860, 2, 0, 0}// 31	32	33	
			, {6811, 1, -1, 4}// 34	
		};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new FAScavengerHuntYardRewardAddonDeed();
			}
		}

		[ Constructable ]
		public FAScavengerHuntYardRewardAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 5363, 0, 1, 5, 0, -1, "SS Camelot", 1);// 25
			AddComplexComponent( (BaseAddon) this, 5365, 2, 0, 6, 0, -1, "Far Seeing Eye", 1);// 26
			AddComplexComponent( (BaseAddon) this, 5358, 2, 0, 3, 0, -1, "Scavenger Hunt Item List", 1);// 27

		}

		public FAScavengerHuntYardRewardAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class FAScavengerHuntYardRewardAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new FAScavengerHuntYardRewardAddon();
			}
		}

		[Constructable]
		public FAScavengerHuntYardRewardAddonDeed()
		{
			Name = "FAScavengerHuntYardReward";
		}

		public FAScavengerHuntYardRewardAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}