/////////////////////////////////////////////////
//
// Automatically generated by the
// AddonGenerator script by Arya
//
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class Hall2010WhichGroveAlchAddon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new Hall2010WhichGroveAlchAddonDeed();
			}
		}

		[ Constructable ]
		public Hall2010WhichGroveAlchAddon()
		{
			AddonComponent ac;
			ac = new AddonComponent( 6188 );
			ac.Hue = 2595;
			AddComponent( ac, 2, 1, 6 );
			ac = new AddonComponent( 6200 );
			AddComponent( ac, 0, 1, 6 );
			ac = new AddonComponent( 3476 );
			ac.Hue = 2723;
			AddComponent( ac, 0, -5, 0 );
			ac = new AddonComponent( 4614 );
			ac.Hue = 2708;
			AddComponent( ac, 1, 1, 0 );
			ac = new AddonComponent( 2793 );
			ac.Hue = 2700;
			AddComponent( ac, 2, 3, 0 );
			ac = new AddonComponent( 3329 );
			ac.Hue = 2723;
			AddComponent( ac, 4, 1, 0 );
			ac = new AddonComponent( 9667 );
			ac.Hue = 2723;
			AddComponent( ac, 2, 1, 36 );
			ac = new AddonComponent( 3476 );
			ac.Hue = 2723;
			AddComponent( ac, -3, -2, 0 );
			ac = new AddonComponent( 1 );
			AddComponent( ac, 0, 2, 0 );
			ac = new AddonComponent( 2792 );
			ac.Hue = 2700;
			AddComponent( ac, 0, 1, 0 );
			ac = new AddonComponent( 4612 );
			ac.Hue = 2708;
			AddComponent( ac, 2, 1, 0 );
			ac = new AddonComponent( 3476 );
			ac.Hue = 2723;
			AddComponent( ac, 4, -2, 0 );
			ac = new AddonComponent( 4303 );
			AddComponent( ac, 2, 0, 0 );
			ac = new AddonComponent( 3326 );
			ac.Hue = 2723;
			AddComponent( ac, 2, -2, 0 );
			ac = new AddonComponent( 2081 );
			ac.Hue = 2723;
			AddComponent( ac, 4, 2, 0 );
			ac = new AddonComponent( 2795 );
			ac.Hue = 2700;
			AddComponent( ac, 1, 3, 0 );
			ac = new AddonComponent( 2788 );
			ac.Hue = 2700;
			AddComponent( ac, -1, 1, 0 );
			ac = new AddonComponent( 3329 );
			ac.Hue = 2723;
			AddComponent( ac, 2, -4, 0 );
			ac = new AddonComponent( 2081 );
			ac.Hue = 2723;
			AddComponent( ac, -2, 2, 0 );
			ac = new AddonComponent( 2081 );
			ac.Hue = 2723;
			AddComponent( ac, -2, 3, 0 );
			ac = new AddonComponent( 2081 );
			ac.Hue = 2723;
			AddComponent( ac, 4, 3, 0 );
			ac = new AddonComponent( 2791 );
			ac.Hue = 2700;
			AddComponent( ac, -1, 3, 0 );
			ac = new AddonComponent( 2795 );
			ac.Hue = 2700;
			AddComponent( ac, 1, 2, 0 );
			ac = new AddonComponent( 4302 );
			AddComponent( ac, 3, -1, 0 );
			ac = new AddonComponent( 1 );
			ac.Hue = 2708;
			AddComponent( ac, 0, 1, 0 );
			ac = new AddonComponent( 2792 );
			ac.Hue = 2700;
			AddComponent( ac, 1, 1, 0 );
			ac = new AddonComponent( 4030 );
			AddComponent( ac, 0, 1, 5 );
			ac = new AddonComponent( 4304 );
			AddComponent( ac, 1, 1, 0 );
			ac = new AddonComponent( 2790 );
			ac.Hue = 2700;
			AddComponent( ac, 2, 1, 0 );
			ac = new AddonComponent( 11755 );
			ac.Hue = 2723;
			AddComponent( ac, 1, 2, 0 );
			ac = new AddonComponent( 2795 );
			ac.Hue = 2700;
			AddComponent( ac, 0, 2, 0 );
			ac = new AddonComponent( 2795 );
			ac.Hue = 2700;
			AddComponent( ac, 0, 3, 0 );
			ac = new AddonComponent( 2791 );
			ac.Hue = 2700;
			AddComponent( ac, -1, 2, 0 );
			ac = new AddonComponent( 4305 );
			AddComponent( ac, 0, 2, 0 );
			ac = new AddonComponent( 3326 );
			ac.Hue = 2723;
			AddComponent( ac, -2, -3, 0 );
			ac = new AddonComponent( 4613 );
			ac.Hue = 2708;
			AddComponent( ac, 0, 1, 0 );
			ac = new AddonComponent( 6209 );
			AddComponent( ac, 1, 1, 6 );
			ac = new AddonComponent( 2081 );
			ac.Hue = 2723;
			AddComponent( ac, 4, 1, 0 );
			ac = new AddonComponent( 3329 );
			ac.Hue = 2723;
			AddComponent( ac, -1, 1, 0 );
			ac = new AddonComponent( 2793 );
			ac.Hue = 2700;
			AddComponent( ac, 2, 2, 0 );
			ac = new AddonComponent( 3739 );
			ac.Hue = 2288;
			AddComponent( ac, 1, 1, 6 );
			ac = new AddonComponent( 3476 );
			ac.Hue = 2723;
			AddComponent( ac, -2, -5, 0 );
			ac = new AddonComponent( 1 );
			ac.Hue = 2700;
			AddComponent( ac, 0, 2, 0 );
			ac = new AddonComponent( 2083 );
			ac.Hue = 2723;
			AddComponent( ac, 4, 5, 0 );
			ac = new AddonComponent( 2081 );
			ac.Hue = 2723;
			AddComponent( ac, 4, 5, 0 );
			ac = new AddonComponent( 2794 );
			ac.Hue = 2700;
			AddComponent( ac, 0, 4, 0 );
			ac = new AddonComponent( 2081 );
			ac.Hue = 2723;
			AddComponent( ac, 4, 4, 0 );
			ac = new AddonComponent( 2081 );
			ac.Hue = 2723;
			AddComponent( ac, -2, 5, 0 );
			ac = new AddonComponent( 2787 );
			ac.Hue = 2700;
			AddComponent( ac, 2, 4, 0 );
			ac = new AddonComponent( 2083 );
			ac.Hue = 2723;
			AddComponent( ac, 3, 5, 0 );
			ac = new AddonComponent( 2083 );
			ac.Hue = 2723;
			AddComponent( ac, -1, 5, 0 );
			ac = new AddonComponent( 2083 );
			ac.Hue = 2723;
			AddComponent( ac, 0, 5, 0 );
			ac = new AddonComponent( 2083 );
			ac.Hue = 2723;
			AddComponent( ac, 2, 5, 0 );
			ac = new AddonComponent( 2794 );
			ac.Hue = 2700;
			AddComponent( ac, 1, 4, 0 );
			ac = new AddonComponent( 2789 );
			ac.Hue = 2700;
			AddComponent( ac, -1, 4, 0 );
			ac = new AddonComponent( 2081 );
			ac.Hue = 2723;
			AddComponent( ac, -2, 4, 0 );
			ac = new AddonComponent( 2086 );
			ac.Hue = 2723;
			AddComponent( ac, 1, 5, 0 );

		}

		public Hall2010WhichGroveAlchAddon( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class Hall2010WhichGroveAlchAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new Hall2010WhichGroveAlchAddon();
			}
		}

		[Constructable]
		public Hall2010WhichGroveAlchAddonDeed()
		{
			Name = "Hall2010WhichGroveAlch";
		}

		public Hall2010WhichGroveAlchAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}