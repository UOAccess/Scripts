/////////////////////////////////////////////////
//
// Automatically generated by the
// AddonGenerator script by Arya
//
/////////////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class AsianBedNSAddon : BaseAddon
	{
		public override BaseAddonDeed Deed
		{
			get
			{
				return new AsianBedNSAddonDeed();
			}
		}

		[ Constructable ]
		public AsianBedNSAddon()
		{
			AddonComponent ac;
			ac = new AddonComponent( 10082 );
			AddComponent( ac, -2, -2, 0 );
			ac = new AddonComponent( 10082 );
			AddComponent( ac, -1, -2, 0 );
			ac = new AddonComponent( 10082 );
			AddComponent( ac, 0, -2, 0 );
			ac = new AddonComponent( 10082 );
			AddComponent( ac, 1, -2, 0 );
			ac = new AddonComponent( 10082 );
			AddComponent( ac, 2, -2, 0 );
			ac = new AddonComponent( 1 );
			AddComponent( ac, 0, 0, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, -2, -1, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, -1, -1, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, 0, -1, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, 1, -1, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, 2, -1, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, 2, 0, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, 1, 0, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, 0, 0, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, -1, 0, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, -2, 0, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, -2, 1, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, -1, 1, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, 0, 1, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, 1, 1, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, 2, 1, 0 );
			ac = new AddonComponent( 10589 );
			AddComponent( ac, 0, 1, 0 );
			ac = new AddonComponent( 1981 );
			ac.Hue = 1192;
			AddComponent( ac, 1, 0, 0 );
			ac = new AddonComponent( 1981 );
			ac.Hue = 1192;
			AddComponent( ac, -2, 0, 0 );
			ac = new AddonComponent( 9417 );
			ac.Light = LightType.Circle150;
			AddComponent( ac, 1, 0, 5 );
			ac = new AddonComponent( 9419 );
			ac.Hue = 1157;
			AddComponent( ac, 3, 0, 0 );
			ac = new AddonComponent( 9419 );
			ac.Hue = 1157;
			AddComponent( ac, 3, 1, 0 );
			ac = new AddonComponent( 9419 );
			ac.Hue = 1157;
			AddComponent( ac, 3, -1, 0 );
			ac = new AddonComponent( 9419 );
			ac.Hue = 1157;
			AddComponent( ac, -2, -1, 0 );
			ac = new AddonComponent( 9419 );
			ac.Hue = 1157;
			AddComponent( ac, -2, 0, 2 );
			ac = new AddonComponent( 9419 );
			ac.Hue = 1157;
			AddComponent( ac, -2, 1, 0 );
			ac = new AddonComponent( 9403 );
			ac.Light = LightType.Circle150;
			AddComponent( ac, -2, 0, 2 );
			ac = new AddonComponent( 4057 );
			AddComponent( ac, -1, -1, 0 );
			ac = new AddonComponent( 4058 );
			AddComponent( ac, 0, -1, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, -1, 2, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, -2, 2, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, -2, 3, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, -1, 3, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, 0, 2, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, 1, 2, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, 2, 2, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, 2, 3, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, 1, 3, 0 );
			ac = new AddonComponent( 10406 );
			ac.Hue = 246;
			AddComponent( ac, 0, 3, 0 );
			ac = new AddonComponent( 1848 );
			ac.Hue = 1192;
			AddComponent( ac, 2, 3, 0 );
			ac = new AddonComponent( 4550 );
			AddComponent( ac, 2, 3, 7 );
			ac = new AddonComponent( 16150 );
			AddComponent( ac, 2, 3, 12 );
			ac = new AddonComponent( 9407 );
			ac.Light = LightType.Circle225;
			AddComponent( ac, -2, 3, 0 );
			ac = new AddonComponent( 9419 );
			ac.Hue = 1157;
			AddComponent( ac, 3, 2, 0 );
			ac = new AddonComponent( 9419 );
			ac.Hue = 1157;
			AddComponent( ac, -2, 2, 0 );

		}

		public AsianBedNSAddon( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class AsianBedNSAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new AsianBedNSAddon();
			}
		}

		[Constructable]
		public AsianBedNSAddonDeed()
		{
			Name = "AsianBedNS";
		}

		public AsianBedNSAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}