
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class BeerCartAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {5716, 1, -1, 0}, {5716, 1, -3, 0}, {2957, 1, -1, 3}// 1	2	3	
			, {2957, 1, 0, 3}, {2957, 1, -4, 3}, {2957, 1, -3, 3}// 4	5	6	
			, {2957, 1, -2, 3}, {2957, -1, -4, 3}, {2957, -1, -3, 3}// 7	8	9	
			, {2957, -1, -2, 3}, {2957, -1, -1, 3}, {2957, -1, 0, 3}// 10	11	12	
			, {2957, 0, -4, 3}, {2957, 0, -3, 3}, {2957, 0, -2, 3}// 13	14	15	
			, {2957, 0, -1, 3}, {2957, 0, 0, 3}, {7607, 0, -2, 9}// 16	17	18	
			, {7608, 1, -2, 10}, {7607, 1, -3, 9}, {7608, 0, -4, 9}// 19	20	21	
			, {7603, 1, -3, 9}, {7604, 1, -4, 9}, {7605, 0, -3, 9}// 22	23	24	
			, {7606, 0, -4, 9}, {4014, -1, -3, 9}, {4014, -1, -4, 9}// 25	26	27	
			, {21, 1, 0, 7}, {21, -2, 0, 7}, {22, -1, -1, 7}// 28	29	30	
			, {22, 0, -1, 7}, {22, 1, -1, 7}, {2861, 0, 0, 9}// 31	32	33	
			, {5742, -1, 0, 9}, {3645, -1, -1, 9}, {3645, -1, -2, 9}// 34	35	36	
			, {3647, -1, -1, 12}, {3646, -1, -2, 12}, {2473, -1, -1, 15}// 37	38	39	
			, {2473, -1, -2, 15}, {2466, 0, -1, 9}, {2461, 1, -1, 9}// 40	41	42	
			, {2500, 0, -2, 9}, {16382, -1, 2, 0}, {16382, 0, 2, 0}// 43	50	51	
			, {16382, -1, 4, 0}, {16382, 0, 4, 0}, {21, 1, -1, 7}// 52	53	54	
			, {21, 1, -2, 7}, {21, 1, -3, 7}, {21, 1, -4, 7}// 55	56	57	
					};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new BeerCartAddonDeed();
			}
		}

		[ Constructable ]
		public BeerCartAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 8762, 2, 0, 0, 0, -1, "Broken Bottle", 1);// 44
			AddComplexComponent( (BaseAddon) this, 8762, 1, -2, 9, 0, -1, "Broken Bottle", 1);// 45
			AddComplexComponent( (BaseAddon) this, 8776, 0, -3, 9, 0, -1, "Broken Bottle", 1);// 46
			AddComplexComponent( (BaseAddon) this, 8776, -1, -2, 9, 0, -1, "Broken Bottle", 1);// 47
			AddComplexComponent( (BaseAddon) this, 8776, 1, -4, 0, 0, -1, "Broken Bottle", 1);// 48
			AddComplexComponent( (BaseAddon) this, 8776, -2, 0, 0, 0, -1, "Broken Bottle", 1);// 49

		}

		public BeerCartAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class BeerCartAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new BeerCartAddon();
			}
		}

		[Constructable]
		public BeerCartAddonDeed()
		{
			Name = "BeerCart";
		}

		public BeerCartAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}