
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class WhiteStoneGardenFountainAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {7038, -3, -3, 0}, {7038, -3, 4, 0}, {3272, -3, -2, 0}// 1	2	3	
			, {3272, -3, 3, 0}, {3272, -2, 4, 0}, {3272, -2, -3, 0}// 4	5	6	
			, {3237, -2, -2, 0}, {3237, -2, 3, 0}, {3223, -1, 4, 0}// 7	8	9	
			, {3223, -1, -3, 0}, {3223, -3, 2, 0}, {3223, -3, -1, 0}// 10	11	12	
			, {5937, -1, 2, 0}, {5938, 0, 2, 0}, {5947, 0, 1, 0}// 13	14	15	
			, {5948, -1, 1, 0}, {5949, -1, 0, 0}, {5950, 0, 0, 0}// 16	17	18	
			, {5951, 0, -1, 0}, {5953, -1, -1, 0}, {7038, 4, -3, 0}// 19	20	25	
			, {7038, 4, 4, 0}, {3272, 3, 4, 0}, {3272, 4, 3, 0}// 26	27	28	
			, {3272, 4, -2, 0}, {3272, 3, -3, 0}, {3237, 3, -2, 0}// 29	30	31	
			, {3237, 3, 3, 0}, {3223, 2, 4, 0}, {3223, 4, 2, 0}// 32	33	34	
			, {3223, 4, -1, 0}, {3223, 2, -3, 0}, {5940, 2, 2, 0}// 35	36	37	
			, {5941, 2, 1, 0}, {5942, 2, 0, 0}, {5943, 2, -1, 0}// 38	39	40	
			, {5945, 1, 0, 0}, {5939, 1, 2, 0}, {5944, 1, -1, 0}// 41	42	43	
			, {5946, 1, 1, 0}// 44	
		};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new WhiteStoneGardenFountainAddonDeed();
			}
		}

		[ Constructable ]
		public WhiteStoneGardenFountainAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 7633, 0, 4, 0, 1150, -1, "", 1);// 21
			AddComplexComponent( (BaseAddon) this, 7633, 0, -3, 0, 1150, -1, "", 1);// 22
			AddComplexComponent( (BaseAddon) this, 7630, -3, 0, 0, 1150, -1, "", 1);// 23
			AddComplexComponent( (BaseAddon) this, 7629, -3, 1, 0, 1150, -1, "", 1);// 24
			AddComplexComponent( (BaseAddon) this, 7632, 1, -3, 0, 1150, -1, "", 1);// 45
			AddComplexComponent( (BaseAddon) this, 7632, 1, 4, 0, 1150, -1, "", 1);// 46
			AddComplexComponent( (BaseAddon) this, 7630, 4, 0, 0, 1150, -1, "", 1);// 47
			AddComplexComponent( (BaseAddon) this, 7629, 4, 1, 0, 1150, -1, "", 1);// 48

		}

		public WhiteStoneGardenFountainAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class WhiteStoneGardenFountainAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new WhiteStoneGardenFountainAddon();
			}
		}

		[Constructable]
		public WhiteStoneGardenFountainAddonDeed()
		{
			Name = "WhiteStoneGardenFountain";
		}

		public WhiteStoneGardenFountainAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}