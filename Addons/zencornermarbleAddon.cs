
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class zencornermarbleAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {1809, -2, 3, 1}, {1801, -1, -1, 1}, {1801, -1, 3, 1}// 2	3	4	
			, {249, -1, -2, 1}, {1803, -1, 0, 0}, {1803, -1, 2, 0}// 5	6	9	
			, {1803, -1, 1, 0}, {4554, -1, 3, 6}, {3309, -1, 0, 3}// 12	14	18	
			, {250, -2, -1, 1}, {3310, -2, 2, 3}, {250, -2, 2, 1}// 19	20	22	
			, {1802, 0, -1, 0}, {251, -2, -2, 1}, {268, -2, 3, 2}// 23	24	25	
			, {1808, 3, -2, 1}, {3309, 2, 1, 26}, {3310, 2, -1, 3}// 26	27	29	
			, {249, 2, -2, 1}, {267, 3, -2, 2}, {1801, 3, -1, 1}// 31	32	33	
			, {1802, 1, -1, 0}, {4554, 3, -1, 6}, {1802, 2, -1, 0}// 34	35	37	
					};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new zencornermarbleAddonDeed();
			}
		}

		[ Constructable ]
		public zencornermarbleAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 253, -2, 0, 1, 0, 1, "", 1);// 1
			AddComplexComponent( (BaseAddon) this, 252, 0, -2, 1, 0, 1, "", 1);// 7
			AddComplexComponent( (BaseAddon) this, 2916, -1, 1, 2, 2960, -1, "Marble Bench", 1);// 8
			AddComplexComponent( (BaseAddon) this, 252, 0, -2, 1, 0, 1, "", 1);// 10
			AddComplexComponent( (BaseAddon) this, 2914, -1, 2, 2, 2960, -1, "Marble Bench", 1);// 11
			AddComplexComponent( (BaseAddon) this, 11534, -1, -1, 7, 0, -1, "ArcanistStatueEast", 1);// 13
			AddComplexComponent( (BaseAddon) this, 253, -2, 1, 1, 0, 1, "", 1);// 15
			AddComplexComponent( (BaseAddon) this, 2921, 0, -1, 2, 2960, -1, "Marble Bench", 1);// 16
			AddComplexComponent( (BaseAddon) this, 2915, -1, 0, 2, 2960, -1, "Marble Bench", 1);// 17
			AddComplexComponent( (BaseAddon) this, 252, 0, -2, 1, 0, 1, "", 1);// 21
			AddComplexComponent( (BaseAddon) this, 2920, 2, -1, 2, 2960, -1, "Marble Bench", 1);// 28
			AddComplexComponent( (BaseAddon) this, 2922, 1, -1, 2, 2960, -1, "Marble Bench", 1);// 30
			AddComplexComponent( (BaseAddon) this, 252, 1, -2, 1, 0, 1, "", 1);// 36

		}

		public zencornermarbleAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class zencornermarbleAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new zencornermarbleAddon();
			}
		}

		[Constructable]
		public zencornermarbleAddonDeed()
		{
			Name = "zencornermarble";
		}

		public zencornermarbleAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}