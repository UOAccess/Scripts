
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class FallcolorsNorthAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {2830, -2, 0, 0}, {13001, -2, 0, 0}, {3204, -2, 0, 3}// 1	2	3	
			, {2816, 1, 1, 1}, {2815, -1, 0, 1}, {2813, 1, 0, 1}// 4	5	6	
			, {2814, 0, 0, 1}, {2816, 1, -1, 1}, {2817, 0, -1, 1}// 7	8	9	
			, {2817, 0, 1, 1}, {2818, -1, -1, 1}, {2818, -1, 1, 1}// 10	11	12	
			, {2830, 2, 0, 1}, {13001, -1, 0, 1}, {13001, 0, 0, 1}// 13	14	15	
			, {13001, 1, 0, 1}, {3220, 0, -1, 3}, {3220, 0, 1, 4}// 16	18	21	
			, {3223, 1, 0, 4}, {3377, 0, 0, 9}, {3204, 2, 0, 4}// 25	27	29	
					};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new FallcolorsNorthAddonDeed();
			}
		}

		[ Constructable ]
		public FallcolorsNorthAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 3220, -1, -1, 3, 2118, -1, "", 1);// 17
			AddComplexComponent( (BaseAddon) this, 3220, 1, -1, 3, 2118, -1, "", 1);// 19
			AddComplexComponent( (BaseAddon) this, 3220, -1, 1, 3, 2118, -1, "", 1);// 20
			AddComplexComponent( (BaseAddon) this, 3220, 1, 1, 3, 2118, -1, "", 1);// 22
			AddComplexComponent( (BaseAddon) this, 3223, -1, 0, 4, 2118, -1, "", 1);// 23
			AddComplexComponent( (BaseAddon) this, 3223, 0, 0, 4, 2118, -1, "", 1);// 24
			AddComplexComponent( (BaseAddon) this, 3377, 1, 0, 9, 2118, -1, "", 1);// 26
			AddComplexComponent( (BaseAddon) this, 3377, -1, 0, 9, 2116, -1, "", 1);// 28

		}

		public FallcolorsNorthAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class FallcolorsNorthAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new FallcolorsNorthAddon();
			}
		}

		[Constructable]
		public FallcolorsNorthAddonDeed()
		{
			Name = "FallcolorsNorth";
		}

		public FallcolorsNorthAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}