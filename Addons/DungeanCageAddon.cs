
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class DungeanCageAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {3116, -1, -4, 0}, {1309, -2, -2, 0}, {3351, -3, -4, 0}// 1	2	3	
			, {1309, 0, -4, 0}, {1309, 0, -3, 0}, {1309, -1, -3, 0}// 4	5	6	
			, {1309, -3, -1, 0}, {1309, -1, -1, 0}, {1309, 2, -1, 0}// 7	8	9	
			, {1309, -2, -3, 0}, {1309, -3, -3, 0}, {1309, 1, 0, 0}// 10	11	12	
			, {1309, 2, 1, 0}, {3119, 4, 1, 20}, {1309, -3, -4, 0}// 13	15	16	
			, {1309, -3, -2, 0}, {3351, -3, -1, 0}, {1309, 2, -4, 0}// 17	18	19	
			, {1309, -1, 0, 0}, {1309, 2, -2, 0}, {1309, 1, -4, 0}// 20	21	22	
			, {2081, -4, -1, 0}, {2081, 2, -1, 0}, {6869, -2, -3, 0}// 23	24	25	
			, {3099, -2, -2, 0}, {2081, -4, -2, 0}, {1309, -2, -4, 0}// 26	27	28	
			, {1309, 1, -3, 0}, {7604, -3, -3, 0}, {3351, 0, -3, 0}// 29	30	31	
			, {3088, 3, -2, 20}, {15871, -2, -4, 0}, {2081, -4, -3, 0}// 32	33	34	
			, {2081, 2, -2, 0}, {2081, -4, -4, 0}, {1309, 1, -2, 0}// 35	36	37	
			, {2081, 2, -3, 0}, {2081, 2, -4, 0}, {1309, 0, -2, 0}// 38	39	40	
			, {1309, -2, 0, 0}, {1309, 0, -1, 0}, {1305, 1, -1, 0}// 41	42	43	
			, {1305, -1, -4, 0}, {1305, 2, -3, 0}, {1305, -1, -2, 0}// 44	45	46	
			, {1305, -2, 1, 0}, {1305, 2, 0, 0}, {1305, 0, 0, 0}// 47	48	49	
			, {1305, -2, -1, 0}, {1306, 0, 1, 0}, {1307, 1, 1, 0}// 50	51	52	
			, {1311, -1, 1, 0}, {1306, -3, 1, 0}, {1310, -3, 0, 0}// 53	54	55	
			, {4652, -1, 0, 0}, {7573, 0, -4, 0}, {4307, -3, -1, 0}// 56	57	58	
			, {2912, -3, 1, 0}, {6916, 0, 1, 0}, {6919, -1, 0, 0}// 59	60	61	
			, {3099, 2, 1, 0}, {2081, 2, 0, 0}, {2081, 2, 1, 0}// 62	63	64	
			, {2081, -4, 0, 0}, {2081, -4, 1, 0}, {4155, -2, -4, 1}// 65	66	67	
			, {6867, -1, -2, 0}, {6867, -1, -1, 0}, {6867, -1, -2, 0}// 68	69	70	
			, {2540, -3, 0, 0}, {2539, -1, -1, 0}, {5643, 0, 0, 0}// 71	72	73	
			, {5644, 0, -4, 0}, {5921, -3, 1, 1}, {5919, -2, 0, 0}// 74	75	76	
			, {2083, 1, 4, 0}, {1309, 1, 4, 0}, {1309, 2, 4, 0}// 77	78	79	
			, {2082, 2, 4, 0}, {1309, -3, 4, 0}, {2083, -2, 4, 0}// 80	81	82	
			, {2081, -4, 4, 0}, {2083, -3, 4, 0}, {1309, -1, 2, 0}// 83	84	85	
			, {1309, 0, 2, 0}, {1309, -1, 4, 0}, {1309, 2, 3, 0}// 86	87	88	
			, {1305, -2, 3, 0}, {1305, -2, 4, 0}, {1305, 2, 2, 0}// 89	90	91	
			, {1306, -2, 2, 0}, {1306, 0, 4, 0}, {1307, 1, 3, 0}// 92	93	94	
			, {1307, 0, 3, 0}, {1308, 1, 2, 0}, {1310, -3, 2, 0}// 95	96	97	
			, {1310, -1, 3, 0}, {1310, -3, 3, 0}, {4650, 0, 2, 0}// 98	99	100	
			, {2911, -3, 2, 0}, {6913, -2, 3, 0}, {2081, 2, 2, 0}// 101	102	103	
			, {2081, 2, 3, 0}, {2081, -4, 2, 0}, {2081, -4, 3, 0}// 104	105	106	
					};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new DungeanCageAddonDeed();
			}
		}

		[ Constructable ]
		public DungeanCageAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 3555, -2, -3, 3, 0, 1, "", 1);// 14

		}

		public DungeanCageAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class DungeanCageAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new DungeanCageAddon();
			}
		}

		[Constructable]
		public DungeanCageAddonDeed()
		{
			Name = "DungeanCage";
		}

		public DungeanCageAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}