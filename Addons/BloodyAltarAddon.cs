
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class BloodyAltarAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {7369, -1, -2, 3}, {7370, -1, 1, 3}, {7377, -2, 0, 3}// 1	2	3	
			, {7378, -2, -1, 3}, {7375, -2, -2, 3}, {7373, -2, 1, 3}// 4	5	6	
			, {7373, -1, 2, 3}, {7385, -1, -1, 3}, {7385, -1, 0, 3}// 7	8	9	
			, {7407, -1, 0, 3}, {4973, -1, 1, 3}, {4071, -1, -2, 0}// 10	11	12	
			, {4070, -1, -1, 0}, {4073, -1, 0, 0}, {6659, -1, -3, 0}// 13	14	17	
			, {7381, 0, -3, 3}, {7382, 1, -3, 3}, {4, 0, -3, 3}// 18	19	20	
			, {5, 1, -3, 3}, {7371, 2, 1, 3}, {7379, 0, 2, 3}// 21	22	23	
			, {7380, 1, 2, 3}, {7372, 2, -2, 3}, {7383, 3, -1, 3}// 24	25	26	
			, {7384, 3, 0, 3}, {7385, 0, -2, 3}, {7385, 1, -2, 3}// 27	28	29	
			, {7385, 0, -1, 3}, {7385, 0, 0, 3}, {7385, 0, 1, 3}// 30	31	32	
			, {7385, 1, 1, 3}, {7385, 1, 0, 3}, {7385, 2, 0, 3}// 33	34	35	
			, {7385, 2, -1, 3}, {7385, 1, -1, 3}, {7376, 3, -2, 3}// 36	37	38	
			, {7374, 2, 2, 3}, {7374, 3, 1, 3}, {7573, 1, -2, 0}// 39	40	41	
			, {7389, 1, -1, 3}, {7393, 0, -2, 3}, {7405, 1, 1, 3}// 42	43	44	
			, {4967, 2, -2, 3}, {4970, 2, 1, 3}, {4075, 1, -2, 0}// 45	46	47	
			, {4078, 1, -1, 0}, {4077, 1, 0, 0}, {4072, 0, -2, 0}// 48	49	50	
			, {4074, 0, -1, 0}, {4076, 0, 0, 0}, {10907, 0, 2, 3}// 51	52	55	
			, {10906, 1, 2, 3}, {6659, 2, -3, 0}// 56	57	
		};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new BloodyAltarAddonDeed();
			}
		}

		[ Constructable ]
		public BloodyAltarAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 8785, -2, 1, 4, 2747, -1, "", 1);// 15
			AddComplexComponent( (BaseAddon) this, 5168, -2, 1, 8, 2998, 10, "", 1);// 16
			AddComplexComponent( (BaseAddon) this, 8785, 3, 1, 4, 2747, -1, "", 1);// 53
			AddComplexComponent( (BaseAddon) this, 5168, 3, 1, 8, 2998, 10, "", 1);// 54
			AddComplexComponent( (BaseAddon) this, 7684, 0, 3, 0, 34, -1, "", 1);// 58
			AddComplexComponent( (BaseAddon) this, 7684, 0, 4, 0, 34, -1, "", 1);// 59

		}

		public BloodyAltarAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class BloodyAltarAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new BloodyAltarAddon();
			}
		}

		[Constructable]
		public BloodyAltarAddonDeed()
		{
			Name = "BloodyAltar";
		}

		public BloodyAltarAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}