
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class HotCocoaStandAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {169, -1, 2, 14}, {8662, -1, 2, 3}, {8663, 0, 2, 3}// 1	2	3	
			, {1759, -1, 1, 3}, {8662, -1, 0, 3}, {8663, 0, -1, 3}// 4	5	6	
			, {169, -1, -1, 3}, {169, 0, 2, 8}, {8655, 1, 2, 3}// 7	8	9	
			, {8655, 1, 2, 5}, {1444, 0, 2, 27}, {1444, 0, 1, 27}// 10	11	12	
			, {1444, 0, 0, 27}, {1444, 0, 1, 15}, {1444, 0, 0, 15}// 13	14	15	
			, {8524, 0, -1, 14}, {8653, 1, 2, 5}, {8653, 1, 2, 3}// 16	25	26	
			, {8653, 1, 1, 5}, {8653, 1, 1, 3}, {8653, 1, 0, 5}// 27	28	29	
			, {8653, 1, 0, 3}, {8655, 1, -1, 5}, {8655, 1, -1, 3}// 30	31	32	
					};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new HotCocoaStandAddonDeed();
			}
		}

		[ Constructable ]
		public HotCocoaStandAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 9269, 1, 2, 11, 0, -1, "Counter", 1);// 17
			AddComplexComponent( (BaseAddon) this, 6871, 1, 2, 11, 1015, -1, "Hot Cocoa", 1);// 18
			AddComplexComponent( (BaseAddon) this, 14133, 1, 2, 16, 1153, -1, "Steam", 1);// 19
			AddComplexComponent( (BaseAddon) this, 9269, 1, 1, 11, 0, -1, "Counter", 1);// 20
			AddComplexComponent( (BaseAddon) this, 9269, 1, 0, 11, 0, -1, "Counter", 1);// 21
			AddComplexComponent( (BaseAddon) this, 4101, 1, 1, 9, 0, -1, "Tips", 1);// 22
			AddComplexComponent( (BaseAddon) this, 2455, 1, 1, 11, 1015, -1, "Hot Cocoa", 1);// 23
			AddComplexComponent( (BaseAddon) this, 2453, 1, 1, 11, 1015, -1, "Hot Cocoa", 1);// 24
			AddComplexComponent( (BaseAddon) this, 3024, 2, 1, 0, 0, -1, "Hot Cocoa 10 gold per cup", 1);// 33
			AddComplexComponent( (BaseAddon) this, 2455, 1, 0, 11, 1015, -1, "Hot Cocoa", 1);// 34
			AddComplexComponent( (BaseAddon) this, 2453, 1, 0, 11, 1015, -1, "Hot Cocoa", 1);// 35
			AddComplexComponent( (BaseAddon) this, 2539, 1, 0, 9, 0, -1, "Warm Chocolate Chip Muffins", 1);// 36

		}

		public HotCocoaStandAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class HotCocoaStandAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new HotCocoaStandAddon();
			}
		}

		[Constructable]
		public HotCocoaStandAddonDeed()
		{
			Name = "HotCocoaStand";
		}

		public HotCocoaStandAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}