
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class snoxmsastreeAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {12696, -1, 0, 1}, {12696, 2, -1, 12}, {12696, 1, 1, 7}// 3	4	5	
			, {12696, 2, 2, 45}, {12696, 1, 2, 14}, {12696, 2, 1, 32}// 6	7	8	
			, {12696, 2, 1, 14}, {12696, 0, 1, 17}, {12696, 2, 1, 32}// 9	10	11	
			, {9002, 2, 0, 1}, {9003, 0, 1, 1}, {9003, 2, 1, 1}// 24	25	26	
			, {9003, 1, 1, 1}, {9003, 0, 2, 1}, {9003, 1, 2, 1}// 27	28	29	
					};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new snoxmsastreeAddonDeed();
			}
		}

		[ Constructable ]
		public snoxmsastreeAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 3287, 2, 1, 12, 1153, -1, "", 1);// 1
			AddComplexComponent( (BaseAddon) this, 3286, 2, 1, 12, 1153, -1, "", 1);// 2
			AddComplexComponent( (BaseAddon) this, 14195, 2, 1, 27, 88, -1, "", 1);// 12
			AddComplexComponent( (BaseAddon) this, 14195, 1, 0, 1, 88, -1, "", 1);// 13
			AddComplexComponent( (BaseAddon) this, 14278, 1, 0, 28, 2350, -1, "", 1);// 14
			AddComplexComponent( (BaseAddon) this, 2734, 0, 0, 0, 39, -1, "", 1);// 15
			AddComplexComponent( (BaseAddon) this, 2730, 1, 0, 0, 39, -1, "", 1);// 16
			AddComplexComponent( (BaseAddon) this, 2735, 2, 0, 0, 39, -1, "", 1);// 17
			AddComplexComponent( (BaseAddon) this, 2733, 0, 1, 0, 39, -1, "", 1);// 18
			AddComplexComponent( (BaseAddon) this, 2729, 1, 1, 0, 39, -1, "", 1);// 19
			AddComplexComponent( (BaseAddon) this, 2731, 2, 1, 0, 39, -1, "", 1);// 20
			AddComplexComponent( (BaseAddon) this, 2737, 0, 2, 0, 39, -1, "", 1);// 21
			AddComplexComponent( (BaseAddon) this, 2732, 1, 2, 0, 39, -1, "", 1);// 22
			AddComplexComponent( (BaseAddon) this, 2736, 2, 2, 0, 39, -1, "", 1);// 23
			AddComplexComponent( (BaseAddon) this, 2734, 0, 0, 1, 39, -1, "", 1);// 30
			AddComplexComponent( (BaseAddon) this, 2730, 1, 0, 1, 39, -1, "", 1);// 31
			AddComplexComponent( (BaseAddon) this, 2735, 2, 0, 1, 39, -1, "", 1);// 32
			AddComplexComponent( (BaseAddon) this, 2733, 0, 1, 1, 39, -1, "", 1);// 33
			AddComplexComponent( (BaseAddon) this, 2729, 1, 1, 1, 39, -1, "", 1);// 34
			AddComplexComponent( (BaseAddon) this, 2731, 2, 1, 1, 39, -1, "", 1);// 35
			AddComplexComponent( (BaseAddon) this, 2737, 0, 2, 1, 39, -1, "", 1);// 36
			AddComplexComponent( (BaseAddon) this, 2732, 1, 2, 1, 39, -1, "", 1);// 37
			AddComplexComponent( (BaseAddon) this, 2736, 2, 2, 1, 39, -1, "", 1);// 38

		}

		public snoxmsastreeAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class snoxmsastreeAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new snoxmsastreeAddon();
			}
		}

		[Constructable]
		public snoxmsastreeAddonDeed()
		{
			Name = "snoxmsastree";
		}

		public snoxmsastreeAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}