
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class waterfallpatiosandAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {4944, -2, -2, 0}, {4945, -2, -3, 0}, {4946, -2, -2, 0}// 1	2	3	
			, {4947, -1, -2, 0}, {4943, -3, -2, 0}, {4952, -2, -2, 12}// 4	5	6	
			, {4951, -3, -2, 12}, {4953, -2, -3, 12}, {4943, -1, -1, 20}// 7	8	9	
			, {4944, 0, -1, 20}, {4946, 0, 0, 40}, {4947, 1, 0, 40}// 10	11	12	
			, {13591, 0, -3, 10}, {13591, 1, -3, 0}, {13591, 2, -2, 22}// 13	14	15	
			, {13591, 0, -3, 0}, {13585, 1, -2, 28}, {13585, 3, -1, 38}// 16	17	18	
			, {13597, 0, -2, 0}, {13597, 1, -2, 0}, {13603, 0, -1, 0}// 19	20	21	
			, {13603, 1, -1, 0}, {13422, -1, -2, 0}, {13422, -1, -1, 0}// 22	23	24	
			, {4943, 2, -2, 0}, {4944, 3, -2, 0}, {4945, 3, -3, 0}// 25	26	27	
			, {4946, 3, -1, 20}, {4951, 3, -2, 35}, {4952, 3, -2, 35}// 28	29	30	
			, {4948, 3, -2, 20}, {13422, 2, -2, 0}, {13422, 2, -1, 0}// 31	32	33	
			, {13422, -1, 0, 0}, {13422, -1, 1, 0}, {13422, -1, 2, 0}// 34	35	36	
			, {13422, 0, 0, 0}, {13422, 0, 1, 0}, {13422, 0, 2, 0}// 37	38	39	
			, {13422, 1, 0, 0}, {13422, 1, 1, 0}, {13422, 1, 2, 0}// 40	41	42	
			, {13422, 2, 0, 0}, {13422, 2, 1, 0}, {13422, 2, 2, 0}// 43	44	45	
			, {13484, 0, 1, 1}, {13485, 2, 0, 1}, {8114, -1, 0, 1}// 46	47	48	
			, {8114, 1, 0, 1}, {6046, 3, -2, 0}, {6046, 3, -1, 0}// 49	50	51	
			, {6046, 3, 0, 0}, {6046, 3, 1, 0}, {6046, 3, 2, 0}// 52	53	54	
			, {6055, 3, 3, 0}, {6052, -2, -1, 0}, {6052, -2, 0, 0}// 55	56	57	
			, {6052, -2, 1, 0}, {6052, -2, 2, 0}, {6056, -2, 3, 0}// 58	59	60	
			, {6050, -1, 3, 0}, {6050, 0, 3, 0}, {6050, 1, 3, 0}// 61	62	63	
			, {6050, 2, 3, 0}, {2077, -1, -8, 50}, {2077, -1, -7, 50}// 64	65	66	
			, {2077, -1, -6, 50}, {2077, -1, -5, 50}, {2077, -1, -4, 50}// 67	68	69	
			, {2077, -1, -3, 50}, {2077, -1, -2, 50}, {2077, 0, -8, 50}// 70	71	72	
			, {2077, 0, -7, 50}, {2077, 0, -6, 50}, {2077, 0, -5, 50}// 73	74	75	
			, {2077, 0, -4, 50}, {2077, 0, -3, 50}, {2077, 0, -2, 50}// 76	77	78	
			, {2077, 1, -8, 50}, {2077, 1, -7, 50}, {2077, 1, -6, 50}// 79	80	81	
			, {2077, 1, -5, 50}, {2077, 1, -4, 50}, {2077, 1, -3, 50}// 82	83	84	
			, {2077, 1, -2, 50}, {2077, 2, -8, 50}, {2077, 2, -7, 50}// 85	86	87	
			, {2077, 2, -6, 50}, {2077, 2, -5, 50}, {2077, 2, -4, 50}// 88	89	90	
			, {2077, 2, -3, 50}, {2077, 2, -2, 50}, {2077, 3, -8, 50}// 91	92	93	
			, {2077, 3, -7, 50}, {2077, 3, -6, 50}, {2077, 3, -5, 50}// 94	95	96	
			, {2077, 3, -4, 50}, {2077, 3, -3, 50}, {2077, 3, -2, 50}// 97	98	99	
			, {357, 0, -2, 50}, {357, 1, -2, 50}, {357, 2, -2, 50}// 100	101	102	
			, {357, 3, -2, 50}, {358, -2, -7, 50}, {358, -2, -6, 50}// 103	104	105	
			, {358, -2, -5, 50}, {358, -2, -4, 50}, {358, -2, -3, 50}// 106	107	108	
			, {358, -2, -2, 50}, {359, -2, -9, 50}, {358, -2, -8, 50}// 109	110	111	
			, {357, -1, -9, 50}, {357, 0, -9, 50}, {357, 1, -9, 50}// 112	113	114	
			, {357, 2, -9, 50}, {357, 3, -9, 50}, {1007, -1, -1, 45}// 115	116	117	
			, {1007, -1, 0, 41}, {1007, -1, 1, 37}, {1007, -1, 2, 33}// 118	119	120	
			, {1007, -1, 3, 29}, {1007, -1, 4, 25}, {1007, -1, 5, 21}// 121	122	123	
			, {1007, -1, 6, 16}, {1007, -1, 7, 11}, {1007, -1, 8, 7}// 124	125	126	
			, {1007, -1, 9, 2}// 127	
		};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new waterfallpatiosandAddonDeed();
			}
		}

		[ Constructable ]
		public waterfallpatiosandAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


		}

		public waterfallpatiosandAddon( Serial serial ) : base( serial )
		{
		}


		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class waterfallpatiosandAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new waterfallpatiosandAddon();
			}
		}

		[Constructable]
		public waterfallpatiosandAddonDeed()
		{
			Name = "waterfallpatiosand";
		}

		public waterfallpatiosandAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}