
////////////////////////////////////////
//                                    //
//   Generated by CEO's YAAAG - V1.2  //
// (Yet Another Arya Addon Generator) //
//                                    //
////////////////////////////////////////
using System;
using Server;
using Server.Items;

namespace Server.Items
{
	public class PeacefulGardenAddon : BaseAddon
	{
        private static int[,] m_AddOnSimpleComponents = new int[,] {
			  {9299, 2, 0, 0}, {9300, 1, 0, 0}, {9301, 0, 0, 0}// 1	2	3	
			, {9302, 0, 1, 0}, {9305, 2, 1, 0}, {9304, 1, 1, 0}// 4	5	6	
			, {9310, -1, 0, 0}, {9312, -1, -1, 0}, {9313, 0, -1, 0}// 7	8	9	
			, {9311, -3, 0, 0}, {9315, -3, 1, 0}, {9314, -2, 0, 0}// 10	11	12	
			, {9314, -2, -1, 0}, {9314, -2, -3, 0}, {9314, 1, -3, 0}// 13	14	15	
			, {9313, -3, -1, 0}, {9315, -3, -2, 0}, {9315, -1, -2, 0}// 16	17	18	
			, {9315, 0, -2, 0}, {9312, 2, -1, 0}, {9311, -3, -3, 0}// 19	20	21	
			, {9311, 0, -3, 0}, {9310, -1, -3, 0}, {9310, 2, -3, 0}// 22	23	24	
			, {9319, 2, -2, 0}, {9317, -1, 1, 0}, {9316, 1, -1, 0}// 25	26	27	
			, {12788, 3, -4, 0}, {12788, 3, -3, 0}, {12788, 3, -2, 0}// 28	29	30	
			, {12788, 3, -1, 0}, {12788, 3, 0, 0}, {12788, 3, 1, 0}// 31	32	33	
			, {12788, -4, -4, 0}, {12788, -3, -4, 0}, {12788, -2, -4, 0}// 34	35	36	
			, {12788, -1, -4, 0}, {12788, 0, -4, 0}, {12788, 1, -4, 0}// 37	38	39	
			, {12788, -4, -3, 0}, {12788, -4, -2, 0}, {12788, -4, -1, 0}// 40	41	42	
			, {12788, -4, 0, 0}, {12788, -4, 1, 0}, {6019, 3, -3, 0}// 43	44	45	
			, {6019, 3, -2, 0}, {6019, 3, -1, 0}, {6019, 3, 0, 0}// 46	47	48	
			, {6019, 3, 1, 0}, {6023, -4, -4, 0}, {6024, 3, -4, 0}// 49	50	51	
			, {6021, -4, -3, 0}, {6021, -4, -2, 0}, {6021, -4, -1, 0}// 52	53	54	
			, {6021, -4, 0, 0}, {6021, -4, 1, 0}, {6020, -3, -4, 0}// 55	56	57	
			, {6020, -2, -4, 0}, {6020, -1, -4, 0}, {6020, 0, -4, 0}// 58	59	60	
			, {6020, 1, -4, 0}, {6020, 2, -4, 0}, {9245, -1, -2, 0}// 61	62	63	
			, {10296, -2, -1, 0}, {12789, -2, 1, 0}, {12789, -2, -2, 0}// 64	65	66	
			, {12789, 1, -2, 0}, {9368, 3, -4, 0}, {9368, -4, -4, 0}// 67	68	69	
			, {9368, 4, -5, 0}, {9368, -5, -5, 0}, {10511, -3, -2, 20}// 70	71	72	
			, {10511, -3, -1, 20}, {10511, -3, 0, 20}, {10511, -3, 1, 20}// 73	74	75	
			, {10509, -2, -3, 20}, {10509, -1, -3, 20}, {10509, 0, -3, 20}// 76	77	78	
			, {10509, 1, -3, 20}, {10509, 2, -3, 20}, {10509, 3, -3, 20}// 79	80	81	
			, {10513, 4, -2, 20}, {10513, 4, -1, 20}, {10513, 4, 0, 20}// 82	83	84	
			, {10513, 4, 1, 20}, {10515, -3, -4, 20}, {10515, -2, -4, 20}// 85	86	87	
			, {10515, -1, -4, 20}, {10515, 0, -4, 20}, {10515, 1, -4, 20}// 88	89	90	
			, {10515, 2, -4, 20}, {10515, 3, -4, 20}, {10515, 4, -4, 20}// 91	92	93	
			, {10513, -4, -3, 20}, {10513, -4, -2, 20}, {10513, -4, -1, 20}// 94	95	96	
			, {10513, -4, 0, 20}, {10513, -4, 1, 20}, {10511, 5, -3, 20}// 97	98	99	
			, {10511, 5, -2, 20}, {10511, 5, -1, 20}, {10511, 5, 0, 20}// 100	101	102	
			, {10511, 5, 1, 20}, {10523, -4, -4, 20}, {10521, 5, -4, 20}// 103	104	105	
			, {10512, 4, -3, 20}, {10510, -3, -3, 20}, {10508, -3, -3, 19}// 106	107	108	
			, {10508, 4, -3, 20}, {10290, 4, -5, 5}, {12788, 2, -4, 0}// 109	110	111	
			, {9330, -2, 1, 1}, {9334, -2, 1, 0}, {9330, 1, -2, 1}// 112	113	114	
			, {9334, 1, -2, 0}, {10463, -2, -2, 2}, {9306, 2, 2, 0}// 115	116	117	
			, {9307, 1, 2, 0}, {9309, 0, 2, 0}, {9312, -1, 2, 0}// 118	119	120	
			, {9313, -3, 2, 0}, {9318, -2, 2, 0}, {12788, -4, 3, 0}// 121	122	123	
			, {12788, -3, 3, 0}, {12788, -2, 3, 0}, {12788, -1, 3, 0}// 124	125	126	
			, {12788, 0, 3, 0}, {12788, 1, 3, 0}, {12788, 2, 3, 0}// 127	128	129	
			, {12788, 3, 3, 0}, {12788, 3, 2, 0}, {12788, -4, 2, 0}// 130	131	132	
			, {6018, -3, 3, 0}, {6018, -2, 3, 0}, {6018, -1, 3, 0}// 133	134	135	
			, {6018, 0, 3, 0}, {6018, 1, 3, 0}, {6018, 2, 3, 0}// 136	137	138	
			, {6019, 3, 2, 0}, {6022, -4, 3, 0}, {6025, 3, 3, 0}// 139	140	141	
			, {6021, -4, 2, 0}, {9368, 3, 3, 0}, {9368, -4, 3, 0}// 142	143	144	
			, {9368, -5, 4, 0}, {9368, 4, 4, 0}, {10511, -3, 3, 20}// 145	146	147	
			, {10511, -3, 2, 20}, {10513, 4, 3, 20}, {10513, 4, 2, 20}// 148	149	150	
			, {10515, -2, 4, 20}, {10515, -1, 4, 20}, {10515, 0, 4, 20}// 151	152	153	
			, {10515, 1, 4, 20}, {10515, 2, 4, 20}, {10515, 3, 4, 20}// 154	155	156	
			, {10513, -4, 3, 20}, {10513, -4, 4, 20}, {10513, -4, 2, 20}// 157	158	159	
			, {10511, 5, 3, 20}, {10511, 5, 4, 20}, {10511, 5, 2, 20}// 160	161	162	
			, {10509, -3, 5, 20}, {10509, -2, 5, 20}, {10509, -1, 5, 20}// 163	164	165	
			, {10509, 0, 5, 20}, {10509, 1, 5, 20}, {10509, 2, 5, 20}// 166	167	168	
			, {10509, 3, 5, 20}, {10509, 4, 5, 20}, {10517, 5, 5, 20}// 169	170	171	
			, {10519, -4, 5, 20}, {10514, 4, 4, 20}, {10512, 4, 4, 21}// 172	173	175	
			, {10510, -3, 4, 20}, {10290, -5, 4, 6}, {10290, 4, 4, 6}// 176	177	178	
					};

 
            
		public override BaseAddonDeed Deed
		{
			get
			{
				return new PeacefulGardenAddonDeed();
			}
		}

		[ Constructable ]
		public PeacefulGardenAddon()
		{

            for (int i = 0; i < m_AddOnSimpleComponents.Length / 4; i++)
                AddComponent( new AddonComponent( m_AddOnSimpleComponents[i,0] ), m_AddOnSimpleComponents[i,1], m_AddOnSimpleComponents[i,2], m_AddOnSimpleComponents[i,3] );


			AddComplexComponent( (BaseAddon) this, 10514, -3, 4, 20, 2362, -1, "", 1);// 174

		}

		public PeacefulGardenAddon( Serial serial ) : base( serial )
		{
		}

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource)
        {
            AddComplexComponent(addon, item, xoffset, yoffset, zoffset, hue, lightsource, null, 1);
        }

        private static void AddComplexComponent(BaseAddon addon, int item, int xoffset, int yoffset, int zoffset, int hue, int lightsource, string name, int amount)
        {
            AddonComponent ac;
            ac = new AddonComponent(item);
            if (name != null && name.Length > 0)
                ac.Name = name;
            if (hue != 0)
                ac.Hue = hue;
            if (amount > 1)
            {
                ac.Stackable = true;
                ac.Amount = amount;
            }
            if (lightsource != -1)
                ac.Light = (LightType) lightsource;
            addon.AddComponent(ac, xoffset, yoffset, zoffset);
        }

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}

	public class PeacefulGardenAddonDeed : BaseAddonDeed
	{
		public override BaseAddon Addon
		{
			get
			{
				return new PeacefulGardenAddon();
			}
		}

		[Constructable]
		public PeacefulGardenAddonDeed()
		{
			Name = "PeacefulGarden";
		}

		public PeacefulGardenAddonDeed( Serial serial ) : base( serial )
		{
		}

		public override void Serialize( GenericWriter writer )
		{
			base.Serialize( writer );
			writer.Write( 0 ); // Version
		}

		public override void	Deserialize( GenericReader reader )
		{
			base.Deserialize( reader );
			int version = reader.ReadInt();
		}
	}
}